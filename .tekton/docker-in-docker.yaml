apiVersion: tekton.dev/v1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.2"
  name: docker-in-docker
  annotations:
    tekton.dev/pipelines.minVersion: "0.56.0"
    tekton.dev/categories: "CICD"
    tekton.dev/tags: "Docker"
    tekton.dev/displayName: "Docker In Docker"
    tekton.dev/platforms: "linux/amd64,linux/arm64"

spec:
  description: 使用 docker in docker, 执行 docker 命令
  workspaces:
  - description: code source
    name: source
  - description: build cache will be placed onto the volume
    name: cache
    optional: true
  - description: gomod cache will be placed onto the volume
    name: modcache
    optional: true
  params:
  - name: command
    description: the command script to be run
    type: string
  - name: tools-image
    description: "image used to run docker commands"
    default: "build-harbor.alauda.cn/devops/docker:28.1-cli"
  - name: dind-image
    description: "image used to run docker daemon"
    default: "docker-mirrors.alauda.cn/library/docker:28.1-dind"
  - name: dind-args
    description: "args for docker daemon"
    type: array
    default:
    - --default-shm-size=256m
    - --storage-driver=overlay2
    - --userland-proxy=false
    - --ipv6
    - --fixed-cidr-v6=2001:db8:1::/64
    - --debug
    - --registry-mirror=https://docker-mirrors.alauda.cn
  volumes:
  - name: dind-certs
    emptyDir: {}
  - name: tmp
    emptyDir: {}
  sidecars:
  - image: $(params.dind-image)
    name: docker-daemon
    args: [ "$(params.dind-args[*])" ]
    securityContext:
      privileged: true
      runAsUser: 0
    env:
    - name: DOCKER_TLS_CERTDIR
      value: /certs
    computeResources:
      requests:
        cpu: 2000m
        memory: 2000Mi
      limits:
        cpu: 6000m
        memory: 4000Mi
    volumeMounts:
    - mountPath: /certs/client
      name: dind-certs
    - mountPath: /tmp
      name: tmp
    readinessProbe:
      periodSeconds: 1
      exec:
        command:
        - ls
        - /certs/client/ca.pem
  steps:
  - name: command
    image: $(params.tools-image)
    imagePullPolicy: Always
    workingDir: $(workspaces.source.path)
    computeResources:
      requests:
        cpu: 1000m
        memory: 2000Mi
      limits:
        cpu: 3000m
        memory: 4000Mi
    env:
    - name: DOCKER_HOST
      value: tcp://localhost:2376
    - name: DOCKER_TLS_VERIFY
      value: "1"
    - name: DOCKER_CERT_PATH
      value: /certs/client
    volumeMounts:
    - mountPath: /certs/client
      name: dind-certs
    - mountPath: /tmp
      name: tmp
    script: |
      #!/bin/bash
      set -ex
      git config --global --add safe.directory $(workspaces.source.path)
      $(params.command)
